{"ast":null,"code":"var _jsxFileName = \"/Users/beatrisilieve/drf-react-todo-app/client/src/components/AddTodo.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Box, Button, FormControl, MenuItem, Modal, Select, TextField } from \"@mui/material\";\nimport { useTodos } from \"../hooks/todos\";\nimport { useCategories } from \"../hooks/categories\";\nimport styles from \"./AddTodo.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst modalStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4\n};\n\nconst AddTodo = () => {\n  _s();\n\n  const [isOpen, setOpen] = useState(false);\n  const [todo, setTodo] = useState({});\n  const {\n    categories,\n    loadCategories\n  } = useCategories();\n  const {\n    createTodo\n  } = useTodos();\n\n  const changeTodoValue = (key, value) => {\n    const newTodo = { ...todo,\n      [key]: value\n    };\n    setTodo(newTodo);\n  };\n\n  const handleOnSave = async () => {\n    await createTodo(todo);\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    (async () => {\n      await loadCategories();\n    })();\n  }, [loadCategories]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => setOpen(true),\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: isOpen,\n      onClose: () => setOpen(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Enter title\",\n            variant: \"standard\",\n            className: styles.formControl,\n            onChange: ev => changeTodoValue('title', ev.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Enter description\",\n            variant: \"standard\",\n            className: styles.formControl,\n            onChange: ev => changeTodoValue('description', ev.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: todo.category || '',\n            label: \"Category\",\n            onChange: ev => changeTodoValue('category', ev.target.value),\n            children: categories.map(_ref => {\n              let {\n                id,\n                name\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: id,\n                children: name\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            onClick: () => handleOnSave(),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTodo, \"5jk/Pdn03xXf88/DwxNuC7Gz6JI=\", false, function () {\n  return [useCategories, useTodos];\n});\n\n_c = AddTodo;\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/Users/beatrisilieve/drf-react-todo-app/client/src/components/AddTodo.js"],"names":["useEffect","useState","Box","Button","FormControl","MenuItem","Modal","Select","TextField","useTodos","useCategories","styles","modalStyle","position","top","left","transform","width","bgcolor","border","boxShadow","p","AddTodo","isOpen","setOpen","todo","setTodo","categories","loadCategories","createTodo","changeTodoValue","key","value","newTodo","handleOnSave","formControl","ev","target","category","map","id","name"],"mappings":"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","sourcesContent":["import {useEffect, useState} from \"react\";\nimport {Box, Button, FormControl, MenuItem, Modal, Select, TextField} from \"@mui/material\";\nimport {useTodos} from \"../hooks/todos\";\nimport {useCategories} from \"../hooks/categories\";\nimport styles from \"./AddTodo.module.scss\";\n\nconst modalStyle = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst AddTodo = () => {\n    const [isOpen, setOpen] = useState(false);\n\n    const [todo, setTodo] = useState({});\n\n    const {\n        categories,\n        loadCategories,\n    } = useCategories();\n\n    const {\n        createTodo,\n    } = useTodos();\n\n    const changeTodoValue = (key, value) => {\n        const newTodo = {\n            ...todo,\n            [key]: value,\n        };\n        setTodo(newTodo);\n    };\n\n    const handleOnSave = async () => {\n        await createTodo(todo);\n        setOpen(false);\n    };\n\n    useEffect(\n        () => {\n            (async () => {\n                await loadCategories();\n            })();\n        },\n        [loadCategories],\n    );\n\n    return (\n        <>\n            <Button\n                variant='contained'\n                onClick={() => setOpen(true)}\n            >\n                Add Todo\n            </Button>\n            <Modal open={isOpen} onClose={() => setOpen(false)}>\n                <Box sx={modalStyle}>\n                    <h3>Add todo</h3>\n                    <FormControl fullWidth margin='normal'>\n                        <TextField\n                            label=\"Enter title\"\n                            variant=\"standard\"\n                            className={styles.formControl}\n                            onChange={(ev) => changeTodoValue('title', ev.target.value)}/>\n                    </FormControl>\n\n                    <FormControl fullWidth margin='normal'>\n                        <TextField\n                            label=\"Enter description\"\n                            variant=\"standard\"\n                            className={styles.formControl}\n                            onChange={(ev) => changeTodoValue('description', ev.target.value)}/>\n                    </FormControl>\n                    <FormControl fullWidth margin='normal'>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={todo.category || ''}\n                            label=\"Category\"\n                            onChange={(ev) => changeTodoValue('category', ev.target.value)}\n                        >\n                            {\n                                categories.map(({id, name}) => (\n                                    <MenuItem key={id} value={id}>{name}</MenuItem>\n                                ))\n                            }\n                        </Select>\n                    </FormControl>\n                    <FormControl fullWidth margin='normal'>\n                        <Button\n                            variant='text'\n                            onClick={() => handleOnSave()}>\n                            Save\n                        </Button>\n                    </FormControl>\n                </Box>\n            </Modal>\n        </>)\n};\n\nexport default AddTodo;"]},"metadata":{},"sourceType":"module"}