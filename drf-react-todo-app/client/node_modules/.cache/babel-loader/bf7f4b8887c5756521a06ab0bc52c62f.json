{"ast":null,"code":"var _jsxFileName = \"/Users/beatrisilieve/drf-react-todo-app/client/src/hooks/services.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext } from \"react\";\nimport HttpService from \"../services/http\";\nimport StorageService from \"../services/storage\";\nimport UrlsService from '../services/urls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServicesContext = /*#__PURE__*/createContext();\n\nconst useServices = () => {\n  _s();\n\n  return useContext(ServicesContext);\n};\n\n_s(useServices, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst ServicesProvider = _ref => {\n  let {\n    children,\n    baseUrl\n  } = _ref;\n  const storageService = new StorageService();\n  const httpService = new HttpService(storageService);\n  const urlsService = new UrlsService(baseUrl);\n  const value = {\n    httpService,\n    storageService,\n    urlsService\n  };\n  return /*#__PURE__*/_jsxDEV(ServicesContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ServicesProvider;\nexport default ServicesProvider;\nexport { useServices };\n\nvar _c;\n\n$RefreshReg$(_c, \"ServicesProvider\");","map":{"version":3,"sources":["/Users/beatrisilieve/drf-react-todo-app/client/src/hooks/services.js"],"names":["createContext","useContext","HttpService","StorageService","UrlsService","ServicesContext","useServices","ServicesProvider","children","baseUrl","storageService","httpService","urlsService","value"],"mappings":";;;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,WAAP,MAAyB,kBAAzB;;AAEA,MAAMC,eAAe,gBAAGL,aAAa,EAArC;;AAEA,MAAMM,WAAW,GAAG;AAAA;;AAAA,SAAML,UAAU,CAACI,eAAD,CAAhB;AAAA,CAApB;;GAAMC,W;;AAEN,MAAMC,gBAAgB,GAAG,QAAyB;AAAA,MAAxB;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAwB;AAC9C,QAAMC,cAAc,GAAG,IAAIP,cAAJ,EAAvB;AACA,QAAMQ,WAAW,GAAG,IAAIT,WAAJ,CAAgBQ,cAAhB,CAApB;AACA,QAAME,WAAW,GAAG,IAAIR,WAAJ,CAAgBK,OAAhB,CAApB;AAEA,QAAMI,KAAK,GAAG;AACVF,IAAAA,WADU;AAEVD,IAAAA,cAFU;AAGVE,IAAAA;AAHU,GAAd;AAMA,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEC,KAAjC;AAAA,cACKL;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBD;;KAAMD,gB;AAkBN,eAAeA,gBAAf;AAEA,SACID,WADJ","sourcesContent":["import {createContext, useContext} from \"react\";\nimport HttpService from \"../services/http\";\nimport StorageService from \"../services/storage\";\nimport UrlsService  from '../services/urls';\n\nconst ServicesContext = createContext();\n\nconst useServices = () => useContext(ServicesContext);\n\nconst ServicesProvider = ({children, baseUrl}) => {\n    const storageService = new StorageService();\n    const httpService = new HttpService(storageService);\n    const urlsService = new UrlsService(baseUrl);\n\n    const value = {\n        httpService,\n        storageService,\n        urlsService,\n    };\n\n    return (\n        <ServicesContext.Provider value={value}>\n            {children}\n        </ServicesContext.Provider>\n    );\n}\n\nexport default ServicesProvider;\n\nexport {\n    useServices,\n};"]},"metadata":{},"sourceType":"module"}